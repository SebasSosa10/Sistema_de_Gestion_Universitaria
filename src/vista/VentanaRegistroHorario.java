package vista;

import Exepciones.NoPuedeGuardarUnHorarioElMismoDIaExepcion;
import Exepciones.NoPuedePonerElHorarioSeCruzaExepcion;
import Exepciones.NoSeEliminoElHorarioExepcion;
import Exepciones.NoSeModificoElHorarioExepcion;
import Exepciones.NoSePuedeModificarPorElEstudianteExepcion;
import Exepciones.NoSeRegistroElHorarioExepcion;
import Exepciones.TieneQueExisterUnHorarioParaElEstudianteExepcion;
import Util.IList;
import Util.Lista;
import controladores.ControladorHorario;
import java.time.LocalTime;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import modelo.Curso;
import modelo.Docente;
import modelo.Horario;
import modelo.NumDia;
import modelo.NumJornada;

/**
 *
 * @author JOAN
 */
public class VentanaRegistroHorario extends javax.swing.JFrame {
    
    controladores.ControladorHorario controlador;
    IList<Horario> listaHorario;
    private final Curso curso;
    
    public VentanaRegistroHorario(Curso curso) {
        initComponents();
        setLocationRelativeTo(this);
        this.curso = curso;
        this.controlador = new ControladorHorario(curso);
        llenarDia();
        llenarcbx(curso);
        actualizarTabla(curso);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbxHoraInicio = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Curso = new javax.swing.JLabel();
        cbxMinutoInicio = new javax.swing.JComboBox<>();
        Curso1 = new javax.swing.JLabel();
        Curso2 = new javax.swing.JLabel();
        cbxDia = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHorario = new javax.swing.JTable();
        Curso3 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        cbxDuracion = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GESTIÃ“N HORARIO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(0, 0, 0))); // NOI18N

        cbxHoraInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHoraInicioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Hora Inicio");

        Curso.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Curso.setForeground(new java.awt.Color(0, 0, 0));
        Curso.setText("Hora:");

        cbxMinutoInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMinutoInicioActionPerformed(evt);
            }
        });

        Curso1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Curso1.setForeground(new java.awt.Color(0, 0, 0));
        Curso1.setText("Minutos:");

        Curso2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Curso2.setForeground(new java.awt.Color(0, 0, 0));
        Curso2.setText("Tiempo duracion:");

        cbxDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDiaActionPerformed(evt);
            }
        });

        tblHorario.setBackground(new java.awt.Color(204, 204, 204));
        tblHorario.setForeground(new java.awt.Color(0, 0, 0));
        tblHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHorario);

        Curso3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Curso3.setForeground(new java.awt.Color(0, 0, 0));
        Curso3.setText("Dia:");

        btnRegistrar.setBackground(new java.awt.Color(204, 255, 204));
        btnRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(0, 0, 0));
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 153, 153));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAtras.setBackground(new java.awt.Color(204, 204, 204));
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Atras.png"))); // NOI18N
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        cbxDuracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(68, 68, 68)
                                .addComponent(btnEliminar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Curso)
                                .addGap(18, 18, 18)
                                .addComponent(cbxHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Curso1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxMinutoInicio, 0, 115, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Curso2)
                                    .addComponent(Curso3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 46, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxDuracion, 0, 174, Short.MAX_VALUE)
                                    .addComponent(cbxDia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAtras)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Curso, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxMinutoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Curso1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Curso2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Curso3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrar)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxHoraInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHoraInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxHoraInicioActionPerformed

    private void cbxMinutoInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMinutoInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMinutoInicioActionPerformed

    private void cbxDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxDiaActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {
            if (CamposVacios()) {
                String hora = (String) cbxHoraInicio.getSelectedItem();
                String minutos = (String) cbxMinutoInicio.getSelectedItem();
                LocalTime HoraMinuto = LocalTime.of(Integer.parseInt(hora), Integer.parseInt(minutos));
                NumDia dia = (NumDia) cbxDia.getSelectedItem();
                int duracion = Integer.parseInt((String) cbxDuracion.getSelectedItem());
                Horario horario = new Horario(dia, HoraMinuto, duracion);
                controlador.guardarHorario(curso, horario);
                JOptionPane.showMessageDialog(null, "Se registro un horario");
                actualizarTabla(curso);
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Favor no dejar Campos VACIOS");
            }
        } catch (NoSeRegistroElHorarioExepcion | NoSePuedeModificarPorElEstudianteExepcion | NoPuedeGuardarUnHorarioElMismoDIaExepcion | NoPuedePonerElHorarioSeCruzaExepcion exp) {
            JOptionPane.showMessageDialog(null, exp.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ingrese numeros existentes");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            NumDia dia = (NumDia) cbxDia.getSelectedItem();
            controlador.eliminarHorario(curso, dia);
            JOptionPane.showMessageDialog(null, "Se elimino el horario");
            actualizarTabla(curso);
            limpiar();
        } catch (NoSeEliminoElHorarioExepcion | TieneQueExisterUnHorarioParaElEstudianteExepcion exp) {
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        VentanaRegistroCurso ventana = new VentanaRegistroCurso();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void llenarcbx(Curso curso) {
        String num = "";
        cbxHoraInicio.removeAllItems();
        cbxMinutoInicio.removeAllItems();
        if (curso.getJornada().equals(NumJornada.DIA)) {
            for (int i = 7; i <= 18; i++) {
                num = i < 10 ? "0" + String.valueOf(i) : String.valueOf(i);
                cbxHoraInicio.addItem(num);
                num = "";
            }
        } else if (curso.getJornada().equals(NumJornada.NOCHE)) {
            for (int i = 18; i <= 22; i++) {
                num = i < 10 ? "0" + String.valueOf(i) : String.valueOf(i);
                cbxHoraInicio.addItem(num);
                num = "";
            }
        }
        for (int i = 0; i <= 59; i++) {
            num = i < 10 ? "0" + String.valueOf(i) : String.valueOf(i);
            cbxMinutoInicio.addItem(num);
            num = "";
        }
    }
    
    
    
    private void llenarDia() {
        cbxDia.addItem(NumDia.LUNES);
        cbxDia.addItem(NumDia.MARTES);
        cbxDia.addItem(NumDia.MIERCOLES);
        cbxDia.addItem(NumDia.JUEVES);
        cbxDia.addItem(NumDia.VIERNES);
        cbxDia.addItem(NumDia.SABADO);
    }
    
    private void actualizarTabla(Curso curso) {
        listaHorario = new Lista<>();
        for (int i = 0; i < controlador.getListaCurso().size(); i++) {
            for (int j = 0; j < controlador.getListaCurso().get(i).getListaHorario().size(); j++) {
                if (curso.getCodigoCurso().equals(controlador.getListaCurso().get(i).getCodigoCurso())) {
                    listaHorario.add(controlador.getListaCurso().get(i).getListaHorario().get(j));
                }
            }
        }
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"DIA", "DURACION", "HORA INICIO", "HORA FNAL",},
                listaHorario.size());
        tblHorario.setModel(modelo);
        TableModel modeloDatos = tblHorario.getModel();
        for (int i = 0; i < listaHorario.size(); i++) {
            Horario aux = listaHorario.get(i);
            modeloDatos.setValueAt(aux.getDia(), i, 0);
            modeloDatos.setValueAt(aux.getDuracion(), i, 1);
            modeloDatos.setValueAt(aux.getHoraMinutoInicio(), i, 2);
            modeloDatos.setValueAt(aux.getHoraMinutoFinal(), i, 3);
        }
    }
    
    private void limpiar() {
        cbxDia.setSelectedIndex(-1);
        cbxDuracion.setSelectedIndex(-1);
        cbxHoraInicio.setSelectedIndex(-1);
        cbxMinutoInicio.setSelectedIndex(-1);
    }
    
    private boolean CamposVacios() {
        if (cbxDuracion.getSelectedIndex() == -1 || cbxDia.getSelectedIndex() == -1 || cbxHoraInicio.getSelectedIndex() == -1 || cbxMinutoInicio.getSelectedIndex() == -1) {
            return false;
        } else {
            return true;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Curso;
    private javax.swing.JLabel Curso1;
    private javax.swing.JLabel Curso2;
    private javax.swing.JLabel Curso3;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<NumDia> cbxDia;
    private javax.swing.JComboBox<String> cbxDuracion;
    private javax.swing.JComboBox<String> cbxHoraInicio;
    private javax.swing.JComboBox<String> cbxMinutoInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHorario;
    // End of variables declaration//GEN-END:variables
}
