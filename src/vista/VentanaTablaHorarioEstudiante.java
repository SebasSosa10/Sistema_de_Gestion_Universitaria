package vista;

import Exepciones.ElEstudianteNoHaSidoRegistrdoaUnCursoExepcion;
import Util.IList;
import controladores.ControladorGestionDocente;
import controladores.ControladorGestionEstudiante;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import modelo.Curso;
import modelo.Horario;
import modelo.Materia;
import modelo.NumDia;
import static modelo.NumDia.JUEVES;
import static modelo.NumDia.LUNES;
import static modelo.NumDia.MARTES;
import static modelo.NumDia.MIERCOLES;
import static modelo.NumDia.SABADO;
import static modelo.NumDia.VIERNES;
import modelo.Usuario;

/**
 *
 * @author JOAN
 */
public class VentanaTablaHorarioEstudiante extends javax.swing.JFrame {

    Usuario usuario;
    ControladorGestionEstudiante controlador;

    public VentanaTablaHorarioEstudiante(Usuario usuario) {
        initComponents();
        this.usuario = usuario;
        this.controlador = new ControladorGestionEstudiante(usuario);
        setLocationRelativeTo(this);
        actualizarTabla();
    }

    private void actualizarTabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{
            "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"});
        IList<Curso> auxLista;
        try {
            auxLista = controlador.buscarCursoEstudiante(usuario);
            String periodo = controlador.calcularPeriodo();
            for (int i = 0; i < auxLista.size(); i++) {
                Materia materia = auxLista.get(i).getMateria();
                if (auxLista.get(i).getPeriodo().equals(periodo)) {
                    IList<Horario> listaHorario = auxLista.get(i).getListaHorario();
                    if (listaHorario != null) {
                        for (int j = 0; j < listaHorario.size(); j++) {
                            NumDia dia = listaHorario.get(j).getDia();
                            switch (dia) {
                                case LUNES:
                                    model.addRow(new Object[]{
                                        listaHorario.get(j).getHoraMinutoInicio() + " - " + listaHorario.get(j).getHoraMinutoFinal() + " - " + materia.getCodigo(),
                                        "", "", "", "", ""});
                                    break;
                                case MARTES:
                                    model.addRow(new Object[]{
                                        "", listaHorario.get(j).getHoraMinutoInicio() + " - " + listaHorario.get(j).getHoraMinutoFinal() + " - " + materia.getCodigo(),
                                        "", "", "", ""});
                                    break;
                                case MIERCOLES:
                                    model.addRow(new Object[]{
                                        "", "", listaHorario.get(j).getHoraMinutoInicio() + " - " + listaHorario.get(j).getHoraMinutoFinal() + " - " + materia.getCodigo(),
                                        "", "", ""});
                                    break;
                                case JUEVES:
                                    model.addRow(new Object[]{
                                        "", "", "", listaHorario.get(j).getHoraMinutoInicio() + " - " + listaHorario.get(j).getHoraMinutoFinal() + " - " + materia.getCodigo(),
                                        "", ""});
                                    break;
                                case VIERNES:
                                    model.addRow(new Object[]{
                                        "", "", "", "", listaHorario.get(j).getHoraMinutoInicio() + " - " + listaHorario.get(j).getHoraMinutoFinal() + " - " + materia.getCodigo(),
                                        ""});
                                    break;
                                case SABADO:
                                    model.addRow(new Object[]{
                                        "", "", "", "", "", listaHorario.get(j).getHoraMinutoInicio() + " - " + listaHorario.get(j).getHoraMinutoFinal() + " - " + materia.getCodigo()});
                                    break;
                                default:
                                    break;
                            }
                        }
                    }
                }
            }
            tablaCurso.setModel(model);
        } catch (ElEstudianteNoHaSidoRegistrdoaUnCursoExepcion ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCurso = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HORARIO DEL ESTUDIANTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        tablaCurso.setBackground(new java.awt.Color(204, 204, 204));
        tablaCurso.setForeground(new java.awt.Color(0, 0, 0));
        tablaCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaCurso);

        btnAtras.setBackground(new java.awt.Color(204, 204, 204));
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Atras.png"))); // NOI18N
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAtras)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        VentanaEstudiante ventana = new VentanaEstudiante(usuario);
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCurso;
    // End of variables declaration//GEN-END:variables
}
