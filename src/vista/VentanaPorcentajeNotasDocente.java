package vista;

import Exepciones.DescripcionIgualExepcion;
import Exepciones.NoTieneCursosIncritosExepcion;
import Exepciones.NoseleHaAsignaCursoAlDocenteExepcion;
import Exepciones.NotaNoEncontradaExepcion;
import Exepciones.PorcentajeExcedeElTotalExepcion;
import Exepciones.PorcentajeNoCompletaElTotalExepcion;
import Exepciones.PorcentajenoesigualTotalExepcion;
import Exepciones.SoloPuedeGuardar3NotasExepcion;
import Util.IList;
import Util.Lista;
import controladores.ControladorNotas;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import modelo.Curso;
import modelo.Estudiante;
import modelo.Nota;
import modelo.Usuario;

/**
 *
 * @author JOAN
 */
public class VentanaPorcentajeNotasDocente extends javax.swing.JFrame {

    ControladorNotas controlador;
    Usuario usuario;
    IList<Nota> listaNota;

    public VentanaPorcentajeNotasDocente(Usuario usuario) {
        initComponents();
        setLocationRelativeTo(this);
        this.usuario = usuario;
        controlador = new ControladorNotas();
        LlenarCurso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        txtPorcentaje = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        cbxCurso = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotas = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "NOTAS DEL CURSO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nota :");

        txtDescripcion.setBackground(new java.awt.Color(204, 204, 204));
        txtDescripcion.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(0, 0, 0));
        txtDescripcion.setText("Descripcion");
        txtDescripcion.setBorder(null);
        txtDescripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDescripcionMousePressed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        txtPorcentaje.setBackground(new java.awt.Color(204, 204, 204));
        txtPorcentaje.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtPorcentaje.setForeground(new java.awt.Color(0, 0, 0));
        txtPorcentaje.setText("0 - 100 %");
        txtPorcentaje.setBorder(null);
        txtPorcentaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPorcentajeMousePressed(evt);
            }
        });
        txtPorcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPorcentajeKeyTyped(evt);
            }
        });

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));

        btnGuardar.setBackground(new java.awt.Color(204, 255, 204));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 0, 0));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(153, 153, 153));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 0, 0));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 153, 153));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        cbxCurso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxCursoItemStateChanged(evt);
            }
        });

        tblNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Descripcion", "Porcentaje"
            }
        ));
        tblNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNotasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblNotasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblNotas);

        btnAtras.setBackground(new java.awt.Color(204, 204, 204));
        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Atras.png"))); // NOI18N
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAtras))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(btnModificar)))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPorcentaje)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(cbxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDescripcionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDescripcionMousePressed
        if (txtDescripcion.getText().equals("Descripcion")) {
            txtDescripcion.setText("");
            txtDescripcion.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtDescripcionMousePressed

    private void txtPorcentajeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPorcentajeMousePressed
        if (txtPorcentaje.getText().equals("0 - 100%")) {
            txtPorcentaje.setText("");
            txtPorcentaje.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtPorcentajeMousePressed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            if (CamposVacios()) {
                String descripcion = txtDescripcion.getText();
                double porcentaje = Double.parseDouble(txtPorcentaje.getText());
                if (porcentaje < 0 || porcentaje > 100) {
                    JOptionPane.showMessageDialog(null, "El porcentaje debe estar entre 0 y 100");
                    return;
                }
                Curso curso = (Curso) cbxCurso.getSelectedItem();
                if (curso != null) {
                    Nota nota = new Nota(descripcion, porcentaje);
                    nota.notasEstudiante((Lista<Estudiante>) curso.getListaEstudiates());
                    controlador.guardarNota(curso, nota);
                    JOptionPane.showMessageDialog(null, "Se guardo la nota");
                    actualizarTabla(curso);
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "tiene que tener un curso asigna para poder calificar");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Favor no dejar Campos VACIOS");
            }
        } catch (NoTieneCursosIncritosExepcion | DescripcionIgualExepcion | PorcentajeExcedeElTotalExepcion | SoloPuedeGuardar3NotasExepcion | PorcentajeNoCompletaElTotalExepcion exp) {
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            if (CamposVacios()) {
                String descripcion = txtDescripcion.getText();
                double porcentaje = Double.parseDouble(txtPorcentaje.getText());
                if (porcentaje < 0 || porcentaje > 100) {
                    JOptionPane.showMessageDialog(null, "El porcentaje debe estar entre 0 y 100");
                    return;
                }
                Curso curso = (Curso) cbxCurso.getSelectedItem();
                if (curso != null) {
                    Nota nota = new Nota(descripcion, porcentaje);
                    nota.notasEstudiante((Lista<Estudiante>) curso.getListaEstudiates());
                    controlador.ModificarNota(curso, nota);
                    JOptionPane.showMessageDialog(null, "Se Modifico la nota");
                    actualizarTabla(curso);
                } else {
                    JOptionPane.showMessageDialog(null, "tiene que tener un curso asigna para poder calificar");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Favor no dejar Campos VACIOS");
            }
        } catch (NoTieneCursosIncritosExepcion | PorcentajeExcedeElTotalExepcion | SoloPuedeGuardar3NotasExepcion | PorcentajeNoCompletaElTotalExepcion | NotaNoEncontradaExepcion exp) {
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            String descripcion = txtDescripcion.getText();
            double porcentaje = Double.parseDouble(txtPorcentaje.getText());
            Curso curso = (Curso) cbxCurso.getSelectedItem();
            if (curso != null) {
                Nota nota = new Nota(descripcion, porcentaje);
                controlador.eliminarNota(curso, nota);
                actualizarTabla(curso);
                JOptionPane.showMessageDialog(null, "Se elimino la nota");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "tiene que tener un curso asigna para poder calificar");
            }
        } catch (NoTieneCursosIncritosExepcion | NotaNoEncontradaExepcion exp) {
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        try {
            Curso curso = (Curso) cbxCurso.getSelectedItem();
            if (curso != null) {
                controlador.validarSalida(curso);
                VentanaDocente ventana = new VentanaDocente(usuario);
                ventana.setVisible(true);
                this.dispose();
            } else {
                VentanaDocente ventana = new VentanaDocente(usuario);
                ventana.setVisible(true);
                this.dispose();
            }
        } catch (PorcentajenoesigualTotalExepcion | NoseleHaAsignaCursoAlDocenteExepcion exp) {
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_btnAtrasActionPerformed


    private void tblNotasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNotasMousePressed
        try {
            int filaSeleccionada = tblNotas.getSelectedRow();
            if (filaSeleccionada != -1) {
                String descripcion = (String) tblNotas.getValueAt(filaSeleccionada, 0);
                double porcentaje = (double) tblNotas.getValueAt(filaSeleccionada, 1);
                txtDescripcion.setText(descripcion);
                txtPorcentaje.setText(String.valueOf(porcentaje));
            }
        } catch (Exception exp) {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_tblNotasMousePressed

    private void cbxCursoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxCursoItemStateChanged
        Curso curso = (Curso) cbxCurso.getSelectedItem();
        actualizarTabla(curso);
    }//GEN-LAST:event_cbxCursoItemStateChanged

    private void tblNotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNotasMouseClicked

    }//GEN-LAST:event_tblNotasMouseClicked

    private void txtPorcentajeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && c != '.' || txtPorcentaje.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPorcentajeKeyTyped

    private void LlenarCurso() {
        cbxCurso.removeAllItems();
        IList<Curso> listaCurso = controlador.getListaCurso();
        if (listaCurso != null) {
            for (int i = 0; i < listaCurso.size(); i++) {
                cbxCurso.addItem(listaCurso.get(i));
            }
        }
    }

    private void actualizarTabla(Curso curso) {
        listaNota = new Lista<>();
        for (int i = 0; i < controlador.getListaCurso().size(); i++) {
            for (int j = 0; j < controlador.getListaCurso().get(i).getListaNotas().size(); j++) {
                if (curso.getCodigoCurso().equals(controlador.getListaCurso().get(i).getCodigoCurso())) {
                    listaNota.add(controlador.getListaCurso().get(i).getListaNotas().get(j));
                }
            }
        }
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"DESCRIPCION", "PORCENTAJE"},
                listaNota.size());
        tblNotas.setModel(modelo);
        TableModel modeloDatos = tblNotas.getModel();
        for (int i = 0; i < listaNota.size(); i++) {
            Nota aux = listaNota.get(i);
            modeloDatos.setValueAt(aux.getDescripcion(), i, 0);
            modeloDatos.setValueAt(aux.getPorcenta(), i, 1);
        }
    }

    private void limpiar() {
        txtDescripcion.setText("");
        txtPorcentaje.setText("");
    }

    public boolean CamposVacios() {
        if (txtDescripcion.getText().isEmpty() || txtPorcentaje.getText().isEmpty()) {
            return false;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<Curso> cbxCurso;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable tblNotas;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtPorcentaje;
    // End of variables declaration//GEN-END:variables
}
